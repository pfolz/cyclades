{
  "name": "ldf-client",
  "description": "Linked Data Fragments Client",
  "version": "1.2.6",
  "license": "MIT",
  "main": "ldf-client.js",
  "bin": {
    "ldf-client": "./bin/ldf-client"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:LinkedDataFragments/Client.js.git"
  },
  "bugs": {
    "url": "https://github.com/LinkedDataFragments/Client.js/issues"
  },
  "scripts": {
    "docs": "./node_modules/jsdoc/jsdoc.js -c jsdoc.json README.md lib",
    "test": "./node_modules/mocha/bin/mocha",
    "hint": "./node_modules/jshint/bin/jshint bin/* lib test"
  },
  "dependencies": {
    "request": "~2.27.0",
    "n3": "~0.4.3",
    "setimmediate": "~1.0.1",
    "sparqljs": "~1.1.0",
    "uritemplate": "~0.3.0",
    "lodash": "~2.4.1",
    "lru-cache": "~2.5.0",
    "minimist": "1.1.0",
    "negotiator": "~0.4.9",
    "xml": ">=1.0.0"
  },
  "optionalDependencies": {
    "xml": ">=1.0.0"
  },
  "devDependencies": {
    "jsdoc": "^3.3.0-beta3",
    "jshint": "~2.1.10",
    "mocha": "~1.17.1",
    "sinon": "~1.9.0",
    "chai": "~1.9.0",
    "sinon-chai": "~2.5.0",
    "pre-commit": "~0.0.9"
  },
  "pre-commit": [
    "hint",
    "test"
  ],
  "browser": {
    "crypto": "./lib/util/crypto-browser.js",
    "request": "./lib/util/request-browser.js",
    "stream": false,
    "zlib": false
  },
  "readme": "# Linked Data Fragments Client <img src=\"http://linkeddatafragments.org/images/logo.svg\" width=\"100\" align=\"right\" alt=\"\" />\nOn today's Web, Linked Data is published in different ways,\nincluding [data dumps](http://downloads.dbpedia.org/3.9/en/),\n[subject pages](http://dbpedia.org/page/Linked_data),\nand [results of SPARQL queries](http://dbpedia.org/sparql?default-graph-uri=http%3A%2F%2Fdbpedia.org&query=CONSTRUCT+%7B+%3Fp+a+dbpedia-owl%3AArtist+%7D%0D%0AWHERE+%7B+%3Fp+a+dbpedia-owl%3AArtist+%7D&format=text%2Fturtle).\nWe call each such part a [**Linked Data Fragment**](http://linkeddatafragments.org/) of the dataset.\n\nThe issue with the current Linked Data Fragments\nis that they are either so powerful that their servers suffer from low availability rates\n([as is the case with SPARQL](http://sw.deri.org/~aidanh/docs/epmonitorISWC.pdf)),\nor either don't allow efficient querying.\n\nInstead, this client solves queries by accessing **Triple Pattern Fragments**.\n<br>\nEach Triple Pattern Fragment offers:\n\n- **data** that corresponds to a _triple pattern_\n  _([example](http://data.linkeddatafragments.org/dbpedia?subject=&predicate=rdf%3Atype&object=dbpedia-owl%3ARestaurant))_.\n- **metadata** that consists of the (approximate) total triple count\n  _([example](http://data.linkeddatafragments.org/dbpedia?subject=&predicate=rdf%3Atype&object=))_.\n- **controls** that lead to all other fragments of the same dataset\n  _([example](http://data.linkeddatafragments.org/dbpedia?subject=&predicate=&object=%22John%22%40en))_.\n\n\n## Execute SPARQL queries\n\nYou can execute SPARQL queries against Triple Pattern Fragments like this:\n```bash\n$ ldf-client http://fragments.dbpedia.org/2014/en query.sparql\n```\nThe arguments to the `ldf-client` command are:\n\n0. Any fragment of the dataset you want to query, in this case DBpedia.\n[_More datasets._](http://linkeddatafragments.org/data/)\n0. A file with the query you want to execute (this can also be a string).\n\n\n### From within your application\n\nFirst, create a `FragmentsClient` to fetch fragments of a certain dataset.\n<br>\nThen create a `SparqlIterator` to evaluate SPARQL queries on that dataset.\n\n```JavaScript\nvar ldf = require('ldf-client');\nvar fragmentsClient = new ldf.FragmentsClient('http://fragments.dbpedia.org/2014/en');\n\nvar query = 'SELECT * { ?s ?p <http://dbpedia.org/resource/Belgium>. ?s ?p ?o } LIMIT 100',\n    results = new ldf.SparqlIterator(query, { fragmentsClient: fragmentsClient });\nresults.on('data', console.log);\n```\n\n\n## Install the client\n\nThis client requires [Node.js](http://nodejs.org/) 0.10 or higher\nand is tested on OSX and Linux.\nTo install, execute:\n```bash\n$ [sudo] npm install -g ldf-client\n```\n\n### Browser version\n\nThe client can also run in Web browsers via [browserify](https://github.com/substack/node-browserify).\n[Live demo.](http://client.linkeddatafragments.org/)\n\nThe API is the same as that of the Node version.\n<br>\nA usage example is available in [a separate project](https://github.com/LinkedDataFragments/WebClient).\n\n### From source\nTo install from the latest GitHub sources, execute:\n```bash\n$ git clone git@github.com:LinkedDataFragments/Client.js\n$ cd Client.js\n$ npm install .\n```\n\nThen run the application with:\n```bash\n$ ./bin/ldf-client http://fragments.dbpedia.org/2014/en queries/artists-york.sparql\n```\nThe `queries` folder contains several example queries for DBpedia.\n\n\n## License\nThe Linked Data Fragments client is written by [Ruben Verborgh](http://ruben.verborgh.org/) and colleagues.\n\nThis code is copyrighted by [Ghent University – iMinds](http://mmlab.be/)\nand released under the [MIT license](http://opensource.org/licenses/MIT).\n",
  "readmeFilename": "README.md",
  "_id": "ldf-client@1.2.6",
  "_from": "ldf-client@"
}
