{
  "name": "sparqljs",
  "version": "1.1.0",
  "description": "A parser for the SPARQL query language",
  "author": "",
  "keywords": [
    "sparql",
    "rdf",
    "query",
    "parser"
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/RubenVerborgh/SPARQL.js.git"
  },
  "bugs": {
    "url": "https://github.com/RubenVerborgh/SPARQL.js/issues"
  },
  "main": "./sparql.js",
  "bin": {
    "sparqljs": "bin/sparql-to-json"
  },
  "scripts": {
    "test": "./build;./node_modules/mocha/bin/mocha",
    "prepublish": "./build"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "devDependencies": {
    "jison": "0.4.x",
    "mocha": "1.21.x",
    "chai": "1.9.x",
    "pre-commit": "~0.0.9"
  },
  "pre-commit": [
    "test"
  ],
  "testling": {
    "files": "test/*.js",
    "harness": "mocha",
    "browsers": [
      "ie/9..latest",
      "firefox/24..latest",
      "chrome/29..latest",
      "safari/6..latest",
      "iphone/6..latest",
      "ipad/6..latest"
    ]
  },
  "readme": "# SPARQL.js – A SPARQL 1.1 parser for JavaScript\nThe [SPARQL 1.1 Query Language](http://www.w3.org/TR/sparql11-query/) allows to query datasources of [RDF triples](http://www.w3.org/TR/rdf11-concepts/).\nSPARQL.js translates SPARQL into a JSON structure, so you can use SPARQL queries in your JavaScript applications.\n\nIt fully supports the [SPARQL 1.1 specification](http://www.w3.org/TR/sparql11-query/), including [property paths](http://www.w3.org/TR/sparql11-query/#propertypaths), [federation](http://www.w3.org/TR/sparql11-federated-query/), and [updates](http://www.w3.org/TR/sparql11-update/).\n\n## Usage\n### Library\n```JavaScript\n// Parse a SPARQL query to a JSON object\nvar SparqlParser = require('sparqljs').Parser;\nvar parser = new SparqlParser();\nvar parsedQuery = parser.parse(\n  'PREFIX foaf: <http://xmlns.com/foaf/0.1/> ' +\n  'SELECT * { ?mickey foaf:name \"Mickey Mouse\"@en; foaf:knows ?other. }');\n\n// Regenerate a SPARQL query from a JSON object\nvar SparqlGenerator = require('sparqljs').Generator;\nvar generator = new SparqlGenerator();\nquery.variables = ['?mickey'];\nvar generatedQuery = generator.stringify(query);\n```\n### Standalone\n```bash\n$ sparql-to-json query.sparql\n```\n\n### Browser\nThrough [browserify](http://browserify.org/):\n```bash\n$ cd SPARQL.js\n$ npm install\n$ browserify sparql.js --standalone sparqljs > sparqljs-browser.js\n$ uglifyjs sparqljs-browser.js -c -m > sparqljs-browser-min.js\n```\n\n## Representation\nQueries are represented in a JSON structure. The most easy way to get acquainted with this structure is to try the examples in the `queries` folder through `sparql-to-json`. All examples of the [SPARQL 1.1 specification](http://www.w3.org/TR/sparql11-query/) have been included, in case you wonder how a specific syntactical construct is represented.\n\nHere is a simple query in SPARQL:\n```SPARQL\nPREFIX dbpedia-owl: <http://dbpedia.org/ontology/>\nSELECT ?p ?c WHERE {\n    ?p a dbpedia-owl:Artist.\n    ?p dbpedia-owl:birthPlace ?c.\n    ?c <http://xmlns.com/foaf/0.1/name> \"York\"@en.\n}\n```\n\nAnd here is the same query in JSON:\n```JSON\n{\n  \"type\": \"query\",\n  \"prefixes\": {\n    \"dbpedia-owl\": \"http://dbpedia.org/ontology/\"\n  },\n  \"queryType\": \"SELECT\",\n  \"variables\": [ \"?p\", \"?c\" ],\n  \"where\": [\n    {\n      \"type\": \"bgp\",\n      \"triples\": [\n        {\n          \"subject\": \"?p\",\n          \"predicate\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\",\n          \"object\": \"http://dbpedia.org/ontology/Artist\"\n        },\n        {\n          \"subject\": \"?p\",\n          \"predicate\": \"http://dbpedia.org/ontology/birthPlace\",\n          \"object\": \"?c\"\n        },\n        {\n          \"subject\": \"?c\",\n          \"predicate\": \"http://xmlns.com/foaf/0.1/name\",\n          \"object\": \"\\\"York\\\"@en\"\n        }\n      ]\n    }\n  ]\n}\n```\n\nThe representation of triples is the same as that of the [N3.js library](https://github.com/RubenVerborgh/N3.js#triple-representation).\n\n## Installation\n```bash\n$ [sudo] npm [-g] install sparqljs\n```\n\n# License, status and contributions\nThe SPARQL.js library is copyrighted by [Ruben Verborgh](http://ruben.verborgh.org/)\nand released under the [MIT License](https://github.com/RubenVerborgh/SPARQL.js/blob/master/LICENSE.md).\n\n[![Build Status](https://travis-ci.org/RubenVerborgh/SPARQL.js.png?branch=master)](https://travis-ci.org/RubenVerborgh/SPARQL.js)\n<br>\n[![Browser Build Status](https://ci.testling.com/RubenVerborgh/SPARQL.js.png)](https://ci.testling.com/RubenVerborgh/SPARQL.js)\n\n[Contributions are welcome](https://github.com/RubenVerborgh/SPARQL.js/blob/master/CONTRIBUTING.md), and bug reports or pull requests are always helpful.\n\n## Contributors\n- Thanks to [Tim Ermilov](https://github.com/yamalight) for [driving the SPARQL generator](https://github.com/RubenVerborgh/SPARQL.js/pull/9)\n",
  "readmeFilename": "README.md",
  "_id": "sparqljs@1.1.0",
  "_from": "sparqljs@~1.1.0"
}
